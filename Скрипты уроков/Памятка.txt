Памятка 

В курсе мы часто будем использовать следующие арифметические и логические операции:

Арифметические операции


+                 сложение
-                 вычитание
*                 умножение
/                  деление (5 / 2 = 2.5)
^ или **      возведение в степень (5^2 = 25 или 5**2 = 25)
x %% y         остаток от деления  (5 %% 2 = 1)
x %/% y        целая часть от деления (5 %/% 2 = 2)



Логические операции 

<          меньше 
<=        меньше или равно
>          больше
>=        больше или равно
==        проверка на равенство
!=         не равно
!x         не x
x | y     x или y
x & y     x и y

TRUE  можно сокращенно обозначать T
FALSE можно сокращенно обозначать F



Памятка

t-Критерий Стьюдента для независимых выборок

t.test(Var1 ~ Var2, data) # если первая переменная количественная, а вторая фактор
t.test(data$Var1, data$Var2) # если обе переменные количественные
 t-Критерий Стьюдента для зависимых выборок


t.test(data$Var1, data$Var2, paired = T)
Проверка на нормальность распределения

shapiro.test(Var1) # проверка на нормальность распределения переменной Var1
# но не удобно когда есть группирующая факторная переменная
Поможет функция by(), которая применяет различные функции на каждом уровне фактора.  

by(iris$Sepal.Length, INDICES = iris$Species, shapiro.test) # проверка на нормальность переменной 
# Sepal.Length в трех разных группах в соответствии с переменной Species

Проверка на гомогенность дисперсий

bartlett.test(mpg ~ am, mtcars) #Критерий Бартлетта 

cor.test(mtcars$mpg, mtcars$disp) # Расчет корреляции Пирсона 

cor.test(~ mpg + disp, mtcars) # запись через формулу

cor.test(mtcars$mpg, mtcars$disp, method = "spearman") # Расчет корреляции Спирмена 

cor.test(mtcars$mpg, mtcars$disp, method = "kendall") # Расчет корреляции Кендала 

cor(iris[, -5]) # построение корреляционной матрицы

fit <- lm(mpg ~ disp, mtcars) # построение линейной регрессии 

fit$coefficients # коэффициенты регрессии 

fit$fitted.values # предсказанные значения зависимой переменной 
 
При наличии одинаковых значений в переменных расчет непараметрических корреляций будет сопровождаться предупреждением о невозможности рассчитать точное значение p - value.

Если в ваших данных есть одинаковые наблюдения, но вы хотите рассчитать непараметрическую корреляцию, используйте функцию spearman_test  из пакета coin

library(coin)
spearman_test(~ mpg + disp, mtcars)

Обратите внимание на различия в графиках. То что в первом aes() будет распространяться на все слои. А то, что в aes() конкретного geom - только на него.

ggplot(mtcars, aes(mpg, disp, col = factor(am)))+
  geom_point()+
  geom_smooth()

ggplot(mtcars, aes(mpg, disp))+
  geom_point(aes(col = factor(am)))+
  geom_smooth()

ggplot(mtcars, aes(mpg, disp))+
  geom_point()+
  geom_smooth(aes(col = factor(am)))






DATA

read.table("step6.csv", header=TRUE, sep=',' )
read.csv("grants.csv")

as.data.frame(list(x = c(0.4, -0.7, -1.7, 28), y = c(-0.29, 0.45, 0.87, 0.03, 0.26)))


total <- merge(dataframeA, dataframeB, by="ID")

таблица_данных[номера_строк, номера_столбцов]
paste("q", 1:5, sep="")

Выбор наблюдений:

1) newdat <- dat[which(dat$gender=="M"), ]

2) data_for_model <- subset(diamonds, cut == 'Ideal' & carat == 0.46)   










